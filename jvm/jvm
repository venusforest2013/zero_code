内存分布：
方法区、堆  ==> 线程共享
栈、程序计数器 ==> 线程不共享

方法区： 对象信息、常量池
栈 ==> 虚拟机栈、本地方法栈（如外接c++库）

垃圾回收：
分代收集

年轻代 => eden,survivor*2 => 标记复制
老年代 => 标记整理 ，对于大量存活的情况，复制成本太高

类加载过程

加载 ==> 字节码 到 方法区的过程
验证  ==> 验证class文件符合java约束，防止恶意攻击
准备  ==> 内存分配过程
解析  ==> 常量池内的符号引用替换为直接引用
初始化 ==> 执行应用代码里的初始化代码

双亲委派 ==> 防止重复加载，安全

启动加载器  ==> jvm实现，c++实现
扩展加载器  ==> java lib库的加载器
应用程序加载器 ==> 加载class path下面的类